# Задача 41.
# Вычислить обратную польскую запись. Вычислите значение арифметического выражения в обратной польской записи. 
# Допустимые операторы +, -, * и /. Каждый операнд может быть целым числом или другим выражением. Обратите внимание, 
# что деление между двумя целыми числами должно усекаться до нуля. Числа в стеке всегда округляем до целых
# Обра́тная по́льская за́пись (англ. Reverse Polish notation, RPN) — форма записи математических и логических выражений, 
# в которой операнды расположены перед знаками операций ( https://ru.wikipedia.org/wiki/Обратная_польская_запись )
# ["2","1","+","3","*"] -> 9 Пример: (3 * (2 + 1)) = 9

# ["3", "4", "5", "+", "*", "6", "1", "2", "+", "/", "-"] -> 25 Пример: ( 3*(4+5))-(6/(1+2) )

# ["4","13","5","/","+"] -> 6 Пример: (4 + (13 / 5)) = 6
# ["10","6","9","3","+","-11","","/","","17","+","5","+"] -> 22 Пример: ((10 (6 / ((9 + 3) -11))) + 17) + 5 = 22

test_set = ["3", "4", "5", "+", "*", "6", "1", "2", "+", "/", "-"]

stack = []
for member in test_set:
    if member.isdigit():
        stack.append(int(member))
    else:
        frst = stack.pop()
        scnd = stack.pop()
        if member == '+':
            stack.append(scnd + frst)
        elif member == '-':
            stack.append(scnd - frst)
        elif member == '*':
            stack.append(scnd * frst)
        elif member == '/':
            stack.append(scnd / frst)
print(stack)
